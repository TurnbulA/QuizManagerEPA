@page
@model QuizManager.Pages.Quizzes.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Quiz</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Quiz.QuizName)
        </dt>
        <dd class="col-sm-10 quizName">
            @Html.DisplayFor(model => model.Quiz.QuizName)
        </dd>
        
    </dl>

    <p>
        <a asp-page="/Questions/Create">Create a new Question</a>
    </p>
    <dl>
        <table class="table">
            <thead>
            <tr>
                <th>
                    Question Index
                </th>
                <th>
                @Html.DisplayNameFor(model => model.Question[0].QuestionContent)
                <th>

            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Question)
            {
                <tr class="questionItem">
                    <td class="questionIndex">

                    </td>
                    <td class="questionName">
                        @Html.DisplayFor(model => item.QuestionContent)
                    </td>
                    <td>
                        <a asp-page="/Questions/Edit" asp-route-id="@item.ID" class="res">Edit</a> |
                        <a asp-page="/Questions/Details" asp-route-id="@item.ID" class="res">Details</a> |
                        <a asp-page="/Questions/Delete" asp-route-id="@item.ID" class="res">Delete</a> |
                    </td>
                </tr>
            }
            </tbody>
        </table>
        
    </dl>
</div>
<div class="">
    <a asp-page="./Edit" asp-route-id="@Model.Quiz.QuizId">Edit</a> |
    <a class="btn btn-light" asp-page="./Index">Back to List</a>
</div>


<script>
    quizItem = [...document.querySelectorAll(".newQuestion")]
    quizItem.forEach(item => {
        item.addEventListener("click", (e) => {
            parentTarget = e.target.parentNode.parentNode;
            quizName = parentTarget.querySelector(".quizName").innerHTML;
            quizName = quizName.trim();
            sessionStorage.setItem("quizName", quizName);
        })
    })
    viewQuiz = [...document.querySelectorAll(".viewQuiz")]
    viewQuiz.forEach(item => {
        item.addEventListener("click", (e) => {
            parentTarget = e.target.parentNode.parentNode;
            quizName = parentTarget.querySelector(".quizName").innerHTML;
            quizName = quizName.trim();
            sessionStorage.setItem("quizName", quizName);
        })
    })
    questionIndex = document.querySelectorAll(".questionIndex");
    questionContent = document.querySelectorAll(".questionName");
    window.addEventListener('load', e => {
        quizName = document.querySelector(".quizName").innerHTML.trim();
        quizRef = @Model.Quiz.QuizId;
        sessionStorage.setItem("quizName", quizName);
        sessionStorage.setItem("quizRef", quizRef);
        count = 1;
        questionIndex.forEach(question => {
            question.innerHTML = count;
            count += 1;
        })
    });
</script>