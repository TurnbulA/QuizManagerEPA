@page
@model QuizManager.Pages.Questions.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Questions</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder ="@Model.QuestionSort">
                    @Html.DisplayNameFor(model => model.Questions[0].QuestionContent)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.QuizSort">
                    @Html.DisplayNameFor(model => model.Questions[0].QuizName)
                </a>
                
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Questions) {
        <tr class="questionItem">
            <td class="questionName">
                @Html.DisplayFor(modelItem => item.QuestionContent)
            </td>
            <td class="quizName">
                @Html.DisplayFor(modelItem => item.QuizName)
            </td>
            <td>
                <a asp-page="/Answers/Create" class="newAnswer">Add Answer</a> |
                <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<script>
    questionItem = [...document.querySelectorAll(".newAnswer")];
    questionItem.forEach(item => {
        item.addEventListener("click", (e) => {
            parentTarget = e.target.parentNode.parentNode;
            questionName = parentTarget.querySelector(".questionName").innerHTML;
            questionName = questionName.trim();
            quizName = parentTarget.querySelector(".quizName").innerHTML.trim();
            sessionStorage.setItem("question", questionName);
            sessionStorage.setItem("quiz", quizName);

        })
    })
</script>
